import copy
import json
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm

from gabby.exercises import Exercise


revision = "dd7b7de68daa"
down_revision = "33389ce52383"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

    # Data migration
    with orm.Session(op.get_bind()) as session:
        for exercise in session.query(Exercise).all():
            adaptation = copy.deepcopy(exercise._adaptation)

            adaptation["settings"].setdefault("placeholder_for_fill_with_free_text", None)
            adaptation["settings"].setdefault("items", None)
            adaptation["settings"].setdefault("items_are_selectable", None)
            adaptation["settings"].setdefault("items_are_boxed", False)
            adaptation["settings"].setdefault("items_have_mcq_beside", False)
            adaptation["settings"].setdefault("show_arrow_before_mcq_fields", False)
            adaptation["settings"].setdefault("show_mcq_choices_by_default", False)

            effects = adaptation["settings"].pop("effects", [])
            for effect in effects:
                if effect["kind"] == "fill-with-free-text":
                    adaptation["settings"]["placeholder_for_fill_with_free_text"] = effect["placeholder"]
                elif effect["kind"] == "itemized":
                    adaptation["settings"]["items"] = effect["items"]
                    adaptation["settings"]["items_are_selectable"] = effect["effects"]["selectable"]
                    adaptation["settings"]["items_are_boxed"] = effect["effects"]["boxed"]

            exercise._adaptation = adaptation
        session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
