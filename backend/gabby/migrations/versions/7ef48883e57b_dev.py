from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


revision = "7ef48883e57b"
down_revision = "6630dab8fc14"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("extraction_events")
    op.drop_column("exercises", "bounding_rectangle")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "exercises",
        sa.Column("bounding_rectangle", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    )
    op.create_table(
        "extraction_events",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("exercise_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("event", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("created_by_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("updated_by_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["created_by_id"], ["users.id"], name="extraction_events_created_by_id_fkey"),
        sa.ForeignKeyConstraint(
            ["exercise_id"], ["exercises.id"], name="extraction_events_exercise_id_fkey", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["updated_by_id"], ["users.id"], name="extraction_events_updated_by_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="extraction_events_pkey"),
    )
    # ### end Alembic commands ###
