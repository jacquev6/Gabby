name: $OPINION_APP_NAME-dev

services:
  fanout:
    image: nginx:latest
    ports:
      - 8080:8080
    volumes:
      - ./fanout/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - adapted
      - new-backend
      - old-backend
      - adminer

  frontend:
    build:
      context: ..
      dockerfile: dev-env/frontend/docker/Dockerfile
    volumes:
      - ..:/app
      - frontend-node-modules:/app/frontend/node_modules
      - frontend-cache:/root/.cache
      - /tmp/.X11-unix:/tmp/.X11-unix  # Allow running GUI apps in container, displaying on host
    working_dir: /app/frontend
    environment:
      VITE_OPINION_APP_VERSION: dev
    command: ["bash", "-c", "npm install && npx vite --host 0.0.0.0 --port 80 --strictPort"]

  adapted:
    build:
      context: ..
      dockerfile: dev-env/adapted/docker/Dockerfile
    volumes:
      - ..:/app
      - adapted-node-modules:/app/adapted/node_modules
      - adapted-cache:/root/.cache
      - /tmp/.X11-unix:/tmp/.X11-unix  # Allow running GUI apps in container, displaying on host
    working_dir: /app/adapted
    command: ["bash", "-c", "npm install && npx vite --base=/adapted --host 0.0.0.0 --port 80 --strictPort"]

  new-backend:
    build:
      context: ..
      dockerfile: dev-env/backend/docker/Dockerfile
    volumes:
      - ..:/app
    working_dir: /app/backend
    environment:
      DJANGO_SETTINGS_MODULE: opinion.settings.dev
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "80"]
    depends_on:
      db:
        condition: service_healthy
  old-backend:
    build:
      context: ..
      dockerfile: dev-env/backend/docker/Dockerfile
    volumes:
      - ..:/app
    working_dir: /app/backend
    environment:
      DJANGO_SETTINGS_MODULE: opinion.settings.dev
    command: ["./manage.py", "runserver", "0.0.0.0:80"]
    depends_on:
      db:
        condition: service_healthy
  initializer:
    build:
      context: ..
      dockerfile: dev-env/backend/docker/Dockerfile
    volumes:
      - ..:/app
    working_dir: /app/backend
    environment:
      DJANGO_SETTINGS_MODULE: opinion.settings.dev
    command: [
      "bash",
      "-c",
      "./manage.py migrate && ./manage.py shell <../dev-env/backend/startup.py && ./manage.py loaddata test-exercises",
    ]
    depends_on:
      db:
        condition: service_healthy
  adminer:
    image: adminer:4
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_NAME: db
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    healthcheck:
      test: [
        "CMD",
        "pg_isready",
        "--timeout=0",
        "--dbname=db",
        "--username=admin",
      ]
      start_period: 0s
      interval: 0.5s
      timeout: 1s
      retries: 10

  doc:
    build:
      context: ..
      dockerfile: dev-env/doc/docker/Dockerfile
    volumes:
      - ..:/app
    working_dir: /app/doc
    environment:
      GABBY_VERSION: dev
    command: ["sphinx-autobuild", ".", "/tmp/doc", "--host", "0.0.0.0", "--port", "80"]

volumes:
  frontend-node-modules:
  frontend-cache:
  adapted-node-modules:
  adapted-cache:
