# https://docs.docker.com/compose/compose-file/

name: gabby-dev

services:
  fanout:
    image: nginx:latest
    ports:
      - "${GABBY_DEV_PORT:-8080}:80"
    volumes:
      - ./fanout/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: ../backend
      dockerfile: ../dev-env/backend/Dockerfile
    volumes:
      - ../backend:/app/code
      - ./backend:/app/dev-env:ro
    working_dir: /app/code
    command: [
      "bash",
      "-c",
      "./manage.py migrate && ./manage.py loaddata test-exercises && ./manage.py shell <../dev-env/startup.py && exec ./manage.py runserver 0.0.0.0:80",
    ]
    depends_on:
      db:
        condition: service_healthy
  adminer:
    image: adminer:4
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_NAME: gabby
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_USER: gabby
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gabby
    healthcheck:
      test: [
        "CMD",
        "pg_isready",
        "--timeout=0",
        "--dbname=gabby",
        "--username=gabby",
      ]
      start_period: 0s
      interval: 0.5s
      timeout: 1s
      retries: 10

  frontend:
    build: frontend
    volumes:
      - ../frontend:/app
      - frontend-node-modules:/app/node_modules
      - frontend-cache:/root/.cache
    working_dir: /app
    environment:
      VITE_GABBY_VERSION: dev
    command: ["bash", "-c", "npm install && cp node_modules/pdfjs-dist/build/pdf.worker.min.mjs public && npx vite --host 0.0.0.0 --port 80 --strictPort"]

volumes:
  db-data:
  frontend-node-modules:
  frontend-cache:
