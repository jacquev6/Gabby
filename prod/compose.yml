# https://docs.docker.com/compose/compose-file/

name: gabby-prod-preview

services:
  # Actual prod services
  ######################

  frontend:
    image: jacquev6/gabby:preview-frontend
    # image: jacquev6/gabby:preview-maintenance-frontend
    pull_policy: never

  # Add a line like this in your crontab to replace the 'db-backup' service below:
  # 10 *   * * *   user  (cd /path/to/compose/env && docker compose exec backend python -m gabby backup-database)
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    healthcheck:
      test: ["CMD", "pg_isready", "--timeout=0", "--dbname=db", "--username=admin"]
      interval: 0.5s

  backend:
    image: jacquev6/gabby:preview-backend
    pull_policy: never
    env_file:
      - backend.env
      - secrets.env
    depends_on:
      db:
        condition: service_healthy

  adminer:
    image: adminer:4

  # Preview-only services
  #######################

  migrator:
    image: jacquev6/gabby:preview-backend
    pull_policy: never
    env_file:
      - backend.env
      - secrets.env
    working_dir: /app/gabby
    command: ["alembic", "upgrade", "head"]
    depends_on:
      db:
        condition: service_healthy
  data-loader:
    image: jacquev6/gabby:preview-backend
    pull_policy: never
    env_file:
      - backend.env
      - secrets.env
    command: ["python", "-m", "gabby", "load-fixtures", "more-test-exercises"]
    depends_on:
      migrator:
        condition: service_completed_successfully
  db-backup:
    image: jacquev6/gabby:preview-backend
    pull_policy: never
    env_file:
      - backend.env
      - secrets.env
    init: true
    command: ["bash", "-c", "while true; do python -m gabby backup-database; sleep 300; done"]
    depends_on:
      data-loader:
        condition: service_completed_successfully

  fanout:
    image: nginx:latest
    ports:
      - 8090:8090
    volumes:
      - ./fanout/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - adminer

  tester:
    build:
      context: ..
      dockerfile: prod/tester/Dockerfile
    image: gabby-prod_preview-tester
    volumes:
      - ../frontend:/app/frontend
      - ../tests:/app/tests
      - ../pdf-examples:/app/pdf-examples
    working_dir: /app/frontend
    command: ["npx", "cypress", "run", "--e2e", "--env", "IS_PROD_PREVIEW=true", "--config", "baseUrl=http://fanout:8090/"]
    depends_on:
      migrator:
        condition: service_completed_successfully
      fanout:
        condition: service_started
  tester-shell:
    image: gabby-prod_preview-tester
    pull_policy: never
    volumes:
      - ../frontend:/app/frontend
      - ../tests:/app/tests
      - ../pdf-examples:/app/pdf-examples
      - /tmp/.X11-unix:/tmp/.X11-unix  # Allow running GUI apps in container, displaying on host
    working_dir: /app/frontend
    init: true
    command: ["sleep", "infinity"]
    depends_on:
      migrator:
        condition: service_completed_successfully
      fanout:
        condition: service_started
