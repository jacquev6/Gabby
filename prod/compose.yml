# https://docs.docker.com/compose/compose-file/

name: gabby-prod-preview

services:
  preview-fanout:
    image: nginx:latest
    ports:
      - 8090:8090
    volumes:
      - ./preview-fanout/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  frontend:
    image: jacquev6/gabby-frontend:preview

  backend:
    image: jacquev6/gabby-backend:preview
    env_file:
      - backend.env
      - secrets.env
    depends_on:
      db:
        condition: service_healthy

  preview-migrator:
    image: jacquev6/gabby-backend:preview
    env_file:
      - backend.env
      - secrets.env
    command: ["bash", "-c", "./manage.py migrate && ./manage.py loaddata test-exercises"]
    depends_on:
      db:
        condition: service_healthy

  preview-tester:
    build:
      context: ..
      dockerfile: prod/preview-tester/Dockerfile
    command: ["npx", "cypress", "run", "--e2e", "--config", "baseUrl=http://preview-fanout:8090/"]
    depends_on:
      preview-migrator:
        condition: service_completed_successfully
      preview-fanout:
        condition: service_started

  # Add a line like this in your crontab:
  # 10 *   * * *   user  (cd /path/to/compose/env && docker compose exec backend python manage.py dbbackup)
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: gabby-prod-preview
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gabby-prod-preview
    healthcheck:
      test: [
        "CMD",
        "pg_isready",
        "--timeout=0",
        "--dbname=gabby-prod-preview",
        "--username=gabby-prod-preview",
      ]
      start_period: 0s
      interval: 0.5s
      timeout: 1s
      retries: 10
