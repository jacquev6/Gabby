/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/batch": {
    /** Batch */
    post: operations["batch_api_batch_post"];
  };
  "/api/exercises": {
    /** Get Exercises */
    get: operations["get_exercises_api_exercises_get"];
    /** Create Exercise */
    post: operations["create_exercise_api_exercises_post"];
  };
  "/api/exercises/{id}": {
    /** Get Exercise */
    get: operations["get_exercise_api_exercises__id__get"];
    /** Delete Exercise */
    delete: operations["delete_exercise_api_exercises__id__delete"];
    /** Update Exercise */
    patch: operations["update_exercise_api_exercises__id__patch"];
  };
  "/api/extractionEvents": {
    /** Get Extraction Events */
    get: operations["get_extraction_events_api_extractionEvents_get"];
    /** Create Extraction Event */
    post: operations["create_extraction_event_api_extractionEvents_post"];
  };
  "/api/extractionEvents/{id}": {
    /** Get Extraction Event */
    get: operations["get_extraction_event_api_extractionEvents__id__get"];
    /** Delete Extraction Event */
    delete: operations["delete_extraction_event_api_extractionEvents__id__delete"];
    /** Update Extraction Event */
    patch: operations["update_extraction_event_api_extractionEvents__id__patch"];
  };
  "/api/fillWithFreeTextAdaptations": {
    /** Create Fill With Free Text Adaptation */
    post: operations["create_fill_with_free_text_adaptation_api_fillWithFreeTextAdaptations_post"];
  };
  "/api/fillWithFreeTextAdaptations/{id}": {
    /** Get Fill With Free Text Adaptation */
    get: operations["get_fill_with_free_text_adaptation_api_fillWithFreeTextAdaptations__id__get"];
    /** Delete Fill With Free Text Adaptation */
    delete: operations["delete_fill_with_free_text_adaptation_api_fillWithFreeTextAdaptations__id__delete"];
    /** Update Fill With Free Text Adaptation */
    patch: operations["update_fill_with_free_text_adaptation_api_fillWithFreeTextAdaptations__id__patch"];
  };
  "/api/multipleChoicesInInstructionsAdaptations": {
    /** Create Multiple Choices In Instructions Adaptation */
    post: operations["create_multiple_choices_in_instructions_adaptation_api_multipleChoicesInInstructionsAdaptations_post"];
  };
  "/api/multipleChoicesInInstructionsAdaptations/{id}": {
    /** Get Multiple Choices In Instructions Adaptation */
    get: operations["get_multiple_choices_in_instructions_adaptation_api_multipleChoicesInInstructionsAdaptations__id__get"];
    /** Delete Multiple Choices In Instructions Adaptation */
    delete: operations["delete_multiple_choices_in_instructions_adaptation_api_multipleChoicesInInstructionsAdaptations__id__delete"];
    /** Update Multiple Choices In Instructions Adaptation */
    patch: operations["update_multiple_choices_in_instructions_adaptation_api_multipleChoicesInInstructionsAdaptations__id__patch"];
  };
  "/api/multipleChoicesInWordingAdaptations": {
    /** Create Multiple Choices In Wording Adaptation */
    post: operations["create_multiple_choices_in_wording_adaptation_api_multipleChoicesInWordingAdaptations_post"];
  };
  "/api/multipleChoicesInWordingAdaptations/{id}": {
    /** Get Multiple Choices In Wording Adaptation */
    get: operations["get_multiple_choices_in_wording_adaptation_api_multipleChoicesInWordingAdaptations__id__get"];
    /** Delete Multiple Choices In Wording Adaptation */
    delete: operations["delete_multiple_choices_in_wording_adaptation_api_multipleChoicesInWordingAdaptations__id__delete"];
    /** Update Multiple Choices In Wording Adaptation */
    patch: operations["update_multiple_choices_in_wording_adaptation_api_multipleChoicesInWordingAdaptations__id__patch"];
  };
  "/api/parsedExercises": {
    /** Create Parsed Exercise */
    post: operations["create_parsed_exercise_api_parsedExercises_post"];
  };
  "/api/parsedExercises/{id}": {
    /** Get Parsed Exercise */
    get: operations["get_parsed_exercise_api_parsedExercises__id__get"];
  };
  "/api/pdfFileNamings": {
    /** Get Pdf File Namings */
    get: operations["get_pdf_file_namings_api_pdfFileNamings_get"];
    /** Create Pdf File Naming */
    post: operations["create_pdf_file_naming_api_pdfFileNamings_post"];
  };
  "/api/pdfFileNamings/{id}": {
    /** Get Pdf File Naming */
    get: operations["get_pdf_file_naming_api_pdfFileNamings__id__get"];
    /** Delete Pdf File Naming */
    delete: operations["delete_pdf_file_naming_api_pdfFileNamings__id__delete"];
    /** Update Pdf File Naming */
    patch: operations["update_pdf_file_naming_api_pdfFileNamings__id__patch"];
  };
  "/api/pdfFiles": {
    /** Get Pdf Files */
    get: operations["get_pdf_files_api_pdfFiles_get"];
    /** Create Pdf File */
    post: operations["create_pdf_file_api_pdfFiles_post"];
  };
  "/api/pdfFiles/{id}": {
    /** Get Pdf File */
    get: operations["get_pdf_file_api_pdfFiles__id__get"];
    /** Delete Pdf File */
    delete: operations["delete_pdf_file_api_pdfFiles__id__delete"];
    /** Update Pdf File */
    patch: operations["update_pdf_file_api_pdfFiles__id__patch"];
  };
  "/api/pings": {
    /** Get Pings */
    get: operations["get_pings_api_pings_get"];
    /** Create Ping */
    post: operations["create_ping_api_pings_post"];
  };
  "/api/pings/{id}": {
    /** Get Ping */
    get: operations["get_ping_api_pings__id__get"];
    /** Delete Ping */
    delete: operations["delete_ping_api_pings__id__delete"];
    /** Update Ping */
    patch: operations["update_ping_api_pings__id__patch"];
  };
  "/api/project-{project_id}-extraction-report.json": {
    /** Extraction Report */
    get: operations["extraction_report_api_project__project_id__extraction_report_json_get"];
  };
  "/api/project-{project_id}.html": {
    /** Export Project */
    get: operations["export_project_api_project__project_id__html_get"];
  };
  "/api/projects": {
    /** Get Projects */
    get: operations["get_projects_api_projects_get"];
    /** Create Project */
    post: operations["create_project_api_projects_post"];
  };
  "/api/projects/{id}": {
    /** Get Project */
    get: operations["get_project_api_projects__id__get"];
    /** Delete Project */
    delete: operations["delete_project_api_projects__id__delete"];
    /** Update Project */
    patch: operations["update_project_api_projects__id__patch"];
  };
  "/api/recoveryEmailRequests": {
    /** Create Recovery Email Request */
    post: operations["create_recovery_email_request_api_recoveryEmailRequests_post"];
  };
  "/api/recoveryEmailRequests/{id}": {
    /** Get Recovery Email Request */
    get: operations["get_recovery_email_request_api_recoveryEmailRequests__id__get"];
  };
  "/api/sections": {
    /** Get Sections */
    get: operations["get_sections_api_sections_get"];
    /** Create Section */
    post: operations["create_section_api_sections_post"];
  };
  "/api/sections/{id}": {
    /** Get Section */
    get: operations["get_section_api_sections__id__get"];
    /** Delete Section */
    delete: operations["delete_section_api_sections__id__delete"];
    /** Update Section */
    patch: operations["update_section_api_sections__id__patch"];
  };
  "/api/selectThingsAdaptations": {
    /** Create Select Things Adaptation */
    post: operations["create_select_things_adaptation_api_selectThingsAdaptations_post"];
  };
  "/api/selectThingsAdaptations/{id}": {
    /** Get Select Things Adaptation */
    get: operations["get_select_things_adaptation_api_selectThingsAdaptations__id__get"];
    /** Delete Select Things Adaptation */
    delete: operations["delete_select_things_adaptation_api_selectThingsAdaptations__id__delete"];
    /** Update Select Things Adaptation */
    patch: operations["update_select_things_adaptation_api_selectThingsAdaptations__id__patch"];
  };
  "/api/syntheticErrors/{id}": {
    /** Get Synthetic Error */
    get: operations["get_synthetic_error_api_syntheticErrors__id__get"];
  };
  "/api/textbooks": {
    /** Get Textbooks */
    get: operations["get_textbooks_api_textbooks_get"];
    /** Create Textbook */
    post: operations["create_textbook_api_textbooks_post"];
  };
  "/api/textbooks/{id}": {
    /** Get Textbook */
    get: operations["get_textbook_api_textbooks__id__get"];
    /** Delete Textbook */
    delete: operations["delete_textbook_api_textbooks__id__delete"];
    /** Update Textbook */
    patch: operations["update_textbook_api_textbooks__id__patch"];
  };
  "/api/token": {
    /** Login */
    post: operations["login_api_token_post"];
  };
  "/api/users/{id}": {
    /** Get User */
    get: operations["get_user_api_users__id__get"];
    /** Update User */
    patch: operations["update_user_api_users__id__patch"];
  };
  "/reset-for-tests/yes-im-sure": {
    /** Reset For Tests */
    post: operations["reset_for_tests_reset_for_tests_yes_im_sure_post"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Body_login_api_token_post */
    Body_login_api_token_post: {
      /** Client Id */
      client_id?: string | null;
      /** Client Secret */
      client_secret?: string | null;
      /** Grant Type */
      grant_type?: string | null;
      /** Options */
      options?: string | null;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Username */
      username: string;
    };
    /** FillWithFreeTextAdaptationOptions */
    FillWithFreeTextAdaptationOptions: {
      /** Placeholder */
      placeholder: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** InsertOp */
    InsertOp: {
      /**
       * Attributes
       * @default {}
       */
      attributes?: {
        [key: string]: true;
      };
      /** Insert */
      insert: string;
    };
    /** ItemLinks */
    ItemLinks: {
      /** Self */
      self: string;
    };
    /** MultipleChoicesInInstructionsAdaptationOptions */
    MultipleChoicesInInstructionsAdaptationOptions: {
      /** Placeholder */
      placeholder: string;
    };
    /** MultipleChoicesInWordingAdaptationOptions */
    MultipleChoicesInWordingAdaptationOptions: Record<string, never>;
    /** OutputListRelationShipMeta */
    OutputListRelationShipMeta: {
      /** Count */
      count: number;
    };
    /** PageLinks */
    PageLinks: {
      /** First */
      first: string;
      /** Last */
      last: string;
      /** Next */
      next: string | null;
      /** Prev */
      prev: string | null;
    };
    /** PageMeta */
    PageMeta: {
      pagination: components["schemas"]["Pagination"];
    };
    /** Pagination */
    Pagination: {
      /** Count */
      count: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** Paragraph */
    Paragraph: {
      /** Sentences */
      sentences: components["schemas"]["Sentence"][];
    };
    /** Point */
    Point: {
      /** X */
      x: number;
      /** Y */
      y: number;
    };
    /** Rectangle */
    Rectangle: {
      start: components["schemas"]["Point"];
      stop: components["schemas"]["Point"];
    };
    /** Section */
    Section: {
      /** Paragraphs */
      paragraphs: components["schemas"]["Paragraph"][];
    };
    /** SelectThingsAdaptationOptions */
    SelectThingsAdaptationOptions: {
      /** Colors */
      colors: number;
      /** Punctuation */
      punctuation: boolean;
      /** Words */
      words: boolean;
    };
    /** Sentence */
    Sentence: {
      /** Tokens */
      tokens: (components["schemas"]["_PlainText"] | components["schemas"]["_BoxedText"] | components["schemas"]["_BoldText"] | components["schemas"]["_ItalicText"] | components["schemas"]["_SelectableText"] | components["schemas"]["_SelectedText"] | components["schemas"]["_SelectedClicks"] | components["schemas"]["_FreeTextInput"] | components["schemas"]["_MultipleChoicesInput"] | components["schemas"]["_Whitespace"])[];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** _BoldText */
    _BoldText: {
      /** Text */
      text: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "boldText";
    };
    /** _BoxedText */
    _BoxedText: {
      /** Text */
      text: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "boxedText";
    };
    /** _FreeTextInput */
    _FreeTextInput: {
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "freeTextInput";
    };
    /** _ItalicText */
    _ItalicText: {
      /** Text */
      text: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "italicText";
    };
    /** _MultipleChoicesInput */
    _MultipleChoicesInput: {
      /** Choices */
      choices: string[];
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "multipleChoicesInput";
    };
    /** _PlainText */
    _PlainText: {
      /** Text */
      text: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "plainText";
    };
    /** _SelectableText */
    _SelectableText: {
      /** Colors */
      colors: number;
      /** Text */
      text: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "selectableText";
    };
    /** _SelectedClicks */
    _SelectedClicks: {
      /** Color */
      color: number;
      /** Colors */
      colors: number;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "selectedClicks";
    };
    /** _SelectedText */
    _SelectedText: {
      /** Color */
      color: number;
      /** Colors */
      colors: number;
      /** Text */
      text: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "selectedText";
    };
    /** _Whitespace */
    _Whitespace: {
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "whitespace";
    };
    /** exerciseCreateInput */
    exerciseCreateInput: {
      data: components["schemas"]["exerciseCreateInputData"];
    };
    /** exerciseCreateInputData */
    exerciseCreateInputData: {
      attributes: components["schemas"]["exerciseCreateInputDataAttributes"];
      relationships: components["schemas"]["exerciseCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** exerciseCreateInputDataAttributes */
    exerciseCreateInputDataAttributes: {
      boundingRectangle?: components["schemas"]["Rectangle"] | null;
      /**
       * Clue
       * @default
       */
      clue?: string;
      /**
       * Example
       * @default
       */
      example?: string;
      /**
       * Instructions
       * @default
       */
      instructions?: string;
      /** Number */
      number: string;
      /** Textbookpage */
      textbookPage?: number | null;
      /**
       * Wording
       * @default
       */
      wording?: string;
    };
    /** exerciseCreateInputDataRelationships */
    exerciseCreateInputDataRelationships: {
      /** @default {} */
      adaptation?: components["schemas"]["exercise_adaptation_Relationship"];
      project: components["schemas"]["exercise_project_Relationship"];
      /** @default {} */
      textbook?: components["schemas"]["exercise_textbook_Relationship"];
    };
    /** exerciseItemOutput */
    exerciseItemOutput: {
      data: components["schemas"]["exerciseOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** exerciseOutputItem */
    exerciseOutputItem: {
      attributes: components["schemas"]["exerciseOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["exerciseOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** exerciseOutputItemAttributes */
    exerciseOutputItemAttributes: {
      boundingRectangle: components["schemas"]["Rectangle"] | null;
      /** Clue */
      clue: string;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Example */
      example: string;
      /** Instructions */
      instructions: string;
      /** Number */
      number: string;
      /** Textbookpage */
      textbookPage: number | null;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
      /** Wording */
      wording: string;
    };
    /** exerciseOutputItemRelationships */
    exerciseOutputItemRelationships: {
      adaptation: components["schemas"]["exercise_adaptation_Relationship"];
      createdBy: components["schemas"]["exercise_createdBy_Relationship"];
      project: components["schemas"]["exercise_project_Relationship"];
      textbook: components["schemas"]["exercise_textbook_Relationship"];
      updatedBy: components["schemas"]["exercise_updatedBy_Relationship"];
    };
    /** exercisePageOutput */
    exercisePageOutput: {
      /** Data */
      data: components["schemas"]["exerciseOutputItem"][];
      /** Included */
      included?: unknown[];
      links: components["schemas"]["PageLinks"];
      meta: components["schemas"]["PageMeta"];
    };
    /** exerciseUpdateInput */
    exerciseUpdateInput: {
      data: components["schemas"]["exerciseUpdateInputData"];
    };
    /** exerciseUpdateInputData */
    exerciseUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["exerciseUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["exerciseUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** exerciseUpdateInputDataAttributes */
    exerciseUpdateInputDataAttributes: {
      boundingRectangle?: components["schemas"]["Rectangle"] | null;
      /** Clue */
      clue?: string;
      /** Example */
      example?: string;
      /** Instructions */
      instructions?: string;
      /** Wording */
      wording?: string;
    };
    /** exerciseUpdateInputDataRelationships */
    exerciseUpdateInputDataRelationships: {
      adaptation?: components["schemas"]["exercise_adaptation_Relationship"];
    };
    /** exercise_adaptation_Relationship */
    exercise_adaptation_Relationship: {
      data: components["schemas"]["exercise_adaptation_Relationship_ObjectId"] | null;
    };
    /** exercise_adaptation_Relationship_ObjectId */
    exercise_adaptation_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @enum {string}
       */
      type: "selectThingsAdaptation" | "fillWithFreeTextAdaptation" | "multipleChoicesInInstructionsAdaptation" | "multipleChoicesInWordingAdaptation";
    };
    /** exercise_createdBy_Relationship */
    exercise_createdBy_Relationship: {
      data: components["schemas"]["exercise_createdBy_Relationship_ObjectId"];
    };
    /** exercise_createdBy_Relationship_ObjectId */
    exercise_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** exercise_project_Relationship */
    exercise_project_Relationship: {
      data: components["schemas"]["exercise_project_Relationship_ObjectId"];
    };
    /** exercise_project_Relationship_ObjectId */
    exercise_project_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "project";
    };
    /** exercise_textbook_Relationship */
    exercise_textbook_Relationship: {
      data: components["schemas"]["exercise_textbook_Relationship_ObjectId"] | null;
    };
    /** exercise_textbook_Relationship_ObjectId */
    exercise_textbook_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "textbook";
    };
    /** exercise_updatedBy_Relationship */
    exercise_updatedBy_Relationship: {
      data: components["schemas"]["exercise_updatedBy_Relationship_ObjectId"];
    };
    /** exercise_updatedBy_Relationship_ObjectId */
    exercise_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** extractionEventCreateInput */
    extractionEventCreateInput: {
      data: components["schemas"]["extractionEventCreateInputData"];
    };
    /** extractionEventCreateInputData */
    extractionEventCreateInputData: {
      attributes: components["schemas"]["extractionEventCreateInputDataAttributes"];
      relationships: components["schemas"]["extractionEventCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** extractionEventCreateInputDataAttributes */
    extractionEventCreateInputDataAttributes: {
      /** Event */
      event: string;
    };
    /** extractionEventCreateInputDataRelationships */
    extractionEventCreateInputDataRelationships: {
      exercise: components["schemas"]["extractionEvent_exercise_Relationship"];
    };
    /** extractionEventItemOutput */
    extractionEventItemOutput: {
      data: components["schemas"]["extractionEventOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** extractionEventOutputItem */
    extractionEventOutputItem: {
      attributes: components["schemas"]["extractionEventOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["extractionEventOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** extractionEventOutputItemAttributes */
    extractionEventOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Event */
      event: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
    };
    /** extractionEventOutputItemRelationships */
    extractionEventOutputItemRelationships: {
      createdBy: components["schemas"]["extractionEvent_createdBy_Relationship"];
      exercise: components["schemas"]["extractionEvent_exercise_Relationship"];
      updatedBy: components["schemas"]["extractionEvent_updatedBy_Relationship"];
    };
    /** extractionEventPageOutput */
    extractionEventPageOutput: {
      /** Data */
      data: components["schemas"]["extractionEventOutputItem"][];
      /** Included */
      included?: unknown[];
      links: components["schemas"]["PageLinks"];
      meta: components["schemas"]["PageMeta"];
    };
    /** extractionEventUpdateInput */
    extractionEventUpdateInput: {
      data: components["schemas"]["extractionEventUpdateInputData"];
    };
    /** extractionEventUpdateInputData */
    extractionEventUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["extractionEventUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["extractionEventUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** extractionEventUpdateInputDataAttributes */
    extractionEventUpdateInputDataAttributes: Record<string, never>;
    /** extractionEventUpdateInputDataRelationships */
    extractionEventUpdateInputDataRelationships: Record<string, never>;
    /** extractionEvent_createdBy_Relationship */
    extractionEvent_createdBy_Relationship: {
      data: components["schemas"]["extractionEvent_createdBy_Relationship_ObjectId"];
    };
    /** extractionEvent_createdBy_Relationship_ObjectId */
    extractionEvent_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** extractionEvent_exercise_Relationship */
    extractionEvent_exercise_Relationship: {
      data: components["schemas"]["extractionEvent_exercise_Relationship_ObjectId"];
    };
    /** extractionEvent_exercise_Relationship_ObjectId */
    extractionEvent_exercise_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "exercise";
    };
    /** extractionEvent_updatedBy_Relationship */
    extractionEvent_updatedBy_Relationship: {
      data: components["schemas"]["extractionEvent_updatedBy_Relationship_ObjectId"];
    };
    /** extractionEvent_updatedBy_Relationship_ObjectId */
    extractionEvent_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** fillWithFreeTextAdaptationCreateInput */
    fillWithFreeTextAdaptationCreateInput: {
      data: components["schemas"]["fillWithFreeTextAdaptationCreateInputData"];
    };
    /** fillWithFreeTextAdaptationCreateInputData */
    fillWithFreeTextAdaptationCreateInputData: {
      attributes: components["schemas"]["fillWithFreeTextAdaptationCreateInputDataAttributes"];
      relationships: components["schemas"]["fillWithFreeTextAdaptationCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** fillWithFreeTextAdaptationCreateInputDataAttributes */
    fillWithFreeTextAdaptationCreateInputDataAttributes: {
      /** Placeholder */
      placeholder: string;
    };
    /** fillWithFreeTextAdaptationCreateInputDataRelationships */
    fillWithFreeTextAdaptationCreateInputDataRelationships: {
      exercise: components["schemas"]["fillWithFreeTextAdaptation_exercise_Relationship"];
    };
    /** fillWithFreeTextAdaptationItemOutput */
    fillWithFreeTextAdaptationItemOutput: {
      data: components["schemas"]["fillWithFreeTextAdaptationOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** fillWithFreeTextAdaptationOutputItem */
    fillWithFreeTextAdaptationOutputItem: {
      attributes: components["schemas"]["fillWithFreeTextAdaptationOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["fillWithFreeTextAdaptationOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** fillWithFreeTextAdaptationOutputItemAttributes */
    fillWithFreeTextAdaptationOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Placeholder */
      placeholder: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
    };
    /** fillWithFreeTextAdaptationOutputItemRelationships */
    fillWithFreeTextAdaptationOutputItemRelationships: {
      createdBy: components["schemas"]["fillWithFreeTextAdaptation_createdBy_Relationship"];
      exercise: components["schemas"]["fillWithFreeTextAdaptation_exercise_Relationship"];
      updatedBy: components["schemas"]["fillWithFreeTextAdaptation_updatedBy_Relationship"];
    };
    /** fillWithFreeTextAdaptationUpdateInput */
    fillWithFreeTextAdaptationUpdateInput: {
      data: components["schemas"]["fillWithFreeTextAdaptationUpdateInputData"];
    };
    /** fillWithFreeTextAdaptationUpdateInputData */
    fillWithFreeTextAdaptationUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["fillWithFreeTextAdaptationUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["fillWithFreeTextAdaptationUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** fillWithFreeTextAdaptationUpdateInputDataAttributes */
    fillWithFreeTextAdaptationUpdateInputDataAttributes: {
      /** Placeholder */
      placeholder?: string;
    };
    /** fillWithFreeTextAdaptationUpdateInputDataRelationships */
    fillWithFreeTextAdaptationUpdateInputDataRelationships: Record<string, never>;
    /** fillWithFreeTextAdaptation_createdBy_Relationship */
    fillWithFreeTextAdaptation_createdBy_Relationship: {
      data: components["schemas"]["fillWithFreeTextAdaptation_createdBy_Relationship_ObjectId"];
    };
    /** fillWithFreeTextAdaptation_createdBy_Relationship_ObjectId */
    fillWithFreeTextAdaptation_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** fillWithFreeTextAdaptation_exercise_Relationship */
    fillWithFreeTextAdaptation_exercise_Relationship: {
      data: components["schemas"]["fillWithFreeTextAdaptation_exercise_Relationship_ObjectId"];
    };
    /** fillWithFreeTextAdaptation_exercise_Relationship_ObjectId */
    fillWithFreeTextAdaptation_exercise_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "exercise";
    };
    /** fillWithFreeTextAdaptation_updatedBy_Relationship */
    fillWithFreeTextAdaptation_updatedBy_Relationship: {
      data: components["schemas"]["fillWithFreeTextAdaptation_updatedBy_Relationship_ObjectId"];
    };
    /** fillWithFreeTextAdaptation_updatedBy_Relationship_ObjectId */
    fillWithFreeTextAdaptation_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** Exercise */
    gabby__exercise_delta__Exercise: {
      /** Instructions */
      instructions: components["schemas"]["InsertOp"][];
    };
    /** Exercise */
    gabby__renderable__Exercise: {
      clue: components["schemas"]["Section"];
      example: components["schemas"]["Section"];
      instructions: components["schemas"]["Section"];
      /** Number */
      number: string;
      /** Textbook Page */
      textbook_page: number | null;
      wording: components["schemas"]["Section"];
    };
    /** multipleChoicesInInstructionsAdaptationCreateInput */
    multipleChoicesInInstructionsAdaptationCreateInput: {
      data: components["schemas"]["multipleChoicesInInstructionsAdaptationCreateInputData"];
    };
    /** multipleChoicesInInstructionsAdaptationCreateInputData */
    multipleChoicesInInstructionsAdaptationCreateInputData: {
      attributes: components["schemas"]["multipleChoicesInInstructionsAdaptationCreateInputDataAttributes"];
      relationships: components["schemas"]["multipleChoicesInInstructionsAdaptationCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** multipleChoicesInInstructionsAdaptationCreateInputDataAttributes */
    multipleChoicesInInstructionsAdaptationCreateInputDataAttributes: {
      /** Placeholder */
      placeholder: string;
    };
    /** multipleChoicesInInstructionsAdaptationCreateInputDataRelationships */
    multipleChoicesInInstructionsAdaptationCreateInputDataRelationships: {
      exercise: components["schemas"]["multipleChoicesInInstructionsAdaptation_exercise_Relationship"];
    };
    /** multipleChoicesInInstructionsAdaptationItemOutput */
    multipleChoicesInInstructionsAdaptationItemOutput: {
      data: components["schemas"]["multipleChoicesInInstructionsAdaptationOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** multipleChoicesInInstructionsAdaptationOutputItem */
    multipleChoicesInInstructionsAdaptationOutputItem: {
      attributes: components["schemas"]["multipleChoicesInInstructionsAdaptationOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["multipleChoicesInInstructionsAdaptationOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** multipleChoicesInInstructionsAdaptationOutputItemAttributes */
    multipleChoicesInInstructionsAdaptationOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Placeholder */
      placeholder: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
    };
    /** multipleChoicesInInstructionsAdaptationOutputItemRelationships */
    multipleChoicesInInstructionsAdaptationOutputItemRelationships: {
      createdBy: components["schemas"]["multipleChoicesInInstructionsAdaptation_createdBy_Relationship"];
      exercise: components["schemas"]["multipleChoicesInInstructionsAdaptation_exercise_Relationship"];
      updatedBy: components["schemas"]["multipleChoicesInInstructionsAdaptation_updatedBy_Relationship"];
    };
    /** multipleChoicesInInstructionsAdaptationUpdateInput */
    multipleChoicesInInstructionsAdaptationUpdateInput: {
      data: components["schemas"]["multipleChoicesInInstructionsAdaptationUpdateInputData"];
    };
    /** multipleChoicesInInstructionsAdaptationUpdateInputData */
    multipleChoicesInInstructionsAdaptationUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["multipleChoicesInInstructionsAdaptationUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["multipleChoicesInInstructionsAdaptationUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** multipleChoicesInInstructionsAdaptationUpdateInputDataAttributes */
    multipleChoicesInInstructionsAdaptationUpdateInputDataAttributes: {
      /** Placeholder */
      placeholder?: string;
    };
    /** multipleChoicesInInstructionsAdaptationUpdateInputDataRelationships */
    multipleChoicesInInstructionsAdaptationUpdateInputDataRelationships: Record<string, never>;
    /** multipleChoicesInInstructionsAdaptation_createdBy_Relationship */
    multipleChoicesInInstructionsAdaptation_createdBy_Relationship: {
      data: components["schemas"]["multipleChoicesInInstructionsAdaptation_createdBy_Relationship_ObjectId"];
    };
    /** multipleChoicesInInstructionsAdaptation_createdBy_Relationship_ObjectId */
    multipleChoicesInInstructionsAdaptation_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** multipleChoicesInInstructionsAdaptation_exercise_Relationship */
    multipleChoicesInInstructionsAdaptation_exercise_Relationship: {
      data: components["schemas"]["multipleChoicesInInstructionsAdaptation_exercise_Relationship_ObjectId"];
    };
    /** multipleChoicesInInstructionsAdaptation_exercise_Relationship_ObjectId */
    multipleChoicesInInstructionsAdaptation_exercise_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "exercise";
    };
    /** multipleChoicesInInstructionsAdaptation_updatedBy_Relationship */
    multipleChoicesInInstructionsAdaptation_updatedBy_Relationship: {
      data: components["schemas"]["multipleChoicesInInstructionsAdaptation_updatedBy_Relationship_ObjectId"];
    };
    /** multipleChoicesInInstructionsAdaptation_updatedBy_Relationship_ObjectId */
    multipleChoicesInInstructionsAdaptation_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** multipleChoicesInWordingAdaptationCreateInput */
    multipleChoicesInWordingAdaptationCreateInput: {
      data: components["schemas"]["multipleChoicesInWordingAdaptationCreateInputData"];
    };
    /** multipleChoicesInWordingAdaptationCreateInputData */
    multipleChoicesInWordingAdaptationCreateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["multipleChoicesInWordingAdaptationCreateInputDataAttributes"];
      relationships: components["schemas"]["multipleChoicesInWordingAdaptationCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** multipleChoicesInWordingAdaptationCreateInputDataAttributes */
    multipleChoicesInWordingAdaptationCreateInputDataAttributes: Record<string, never>;
    /** multipleChoicesInWordingAdaptationCreateInputDataRelationships */
    multipleChoicesInWordingAdaptationCreateInputDataRelationships: {
      exercise: components["schemas"]["multipleChoicesInWordingAdaptation_exercise_Relationship"];
    };
    /** multipleChoicesInWordingAdaptationItemOutput */
    multipleChoicesInWordingAdaptationItemOutput: {
      data: components["schemas"]["multipleChoicesInWordingAdaptationOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** multipleChoicesInWordingAdaptationOutputItem */
    multipleChoicesInWordingAdaptationOutputItem: {
      attributes: components["schemas"]["multipleChoicesInWordingAdaptationOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["multipleChoicesInWordingAdaptationOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** multipleChoicesInWordingAdaptationOutputItemAttributes */
    multipleChoicesInWordingAdaptationOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
    };
    /** multipleChoicesInWordingAdaptationOutputItemRelationships */
    multipleChoicesInWordingAdaptationOutputItemRelationships: {
      createdBy: components["schemas"]["multipleChoicesInWordingAdaptation_createdBy_Relationship"];
      exercise: components["schemas"]["multipleChoicesInWordingAdaptation_exercise_Relationship"];
      updatedBy: components["schemas"]["multipleChoicesInWordingAdaptation_updatedBy_Relationship"];
    };
    /** multipleChoicesInWordingAdaptationUpdateInput */
    multipleChoicesInWordingAdaptationUpdateInput: {
      data: components["schemas"]["multipleChoicesInWordingAdaptationUpdateInputData"];
    };
    /** multipleChoicesInWordingAdaptationUpdateInputData */
    multipleChoicesInWordingAdaptationUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["multipleChoicesInWordingAdaptationUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["multipleChoicesInWordingAdaptationUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** multipleChoicesInWordingAdaptationUpdateInputDataAttributes */
    multipleChoicesInWordingAdaptationUpdateInputDataAttributes: Record<string, never>;
    /** multipleChoicesInWordingAdaptationUpdateInputDataRelationships */
    multipleChoicesInWordingAdaptationUpdateInputDataRelationships: Record<string, never>;
    /** multipleChoicesInWordingAdaptation_createdBy_Relationship */
    multipleChoicesInWordingAdaptation_createdBy_Relationship: {
      data: components["schemas"]["multipleChoicesInWordingAdaptation_createdBy_Relationship_ObjectId"];
    };
    /** multipleChoicesInWordingAdaptation_createdBy_Relationship_ObjectId */
    multipleChoicesInWordingAdaptation_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** multipleChoicesInWordingAdaptation_exercise_Relationship */
    multipleChoicesInWordingAdaptation_exercise_Relationship: {
      data: components["schemas"]["multipleChoicesInWordingAdaptation_exercise_Relationship_ObjectId"];
    };
    /** multipleChoicesInWordingAdaptation_exercise_Relationship_ObjectId */
    multipleChoicesInWordingAdaptation_exercise_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "exercise";
    };
    /** multipleChoicesInWordingAdaptation_updatedBy_Relationship */
    multipleChoicesInWordingAdaptation_updatedBy_Relationship: {
      data: components["schemas"]["multipleChoicesInWordingAdaptation_updatedBy_Relationship_ObjectId"];
    };
    /** multipleChoicesInWordingAdaptation_updatedBy_Relationship_ObjectId */
    multipleChoicesInWordingAdaptation_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** parsedExerciseCreateInput */
    parsedExerciseCreateInput: {
      data: components["schemas"]["parsedExerciseCreateInputData"];
    };
    /** parsedExerciseCreateInputData */
    parsedExerciseCreateInputData: {
      attributes: components["schemas"]["parsedExerciseCreateInputDataAttributes"];
      /** @default {} */
      relationships?: components["schemas"]["parsedExerciseCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** parsedExerciseCreateInputDataAttributes */
    parsedExerciseCreateInputDataAttributes: {
      /** Adaptationoptions */
      adaptationOptions: components["schemas"]["SelectThingsAdaptationOptions"] | components["schemas"]["FillWithFreeTextAdaptationOptions"] | components["schemas"]["MultipleChoicesInInstructionsAdaptationOptions"] | components["schemas"]["MultipleChoicesInWordingAdaptationOptions"];
      /** Clue */
      clue: string;
      /** Example */
      example: string;
      /** Instructions */
      instructions: string;
      /** Number */
      number: string;
      /** Type */
      type: string;
      /** Wording */
      wording: string;
    };
    /** parsedExerciseCreateInputDataRelationships */
    parsedExerciseCreateInputDataRelationships: Record<string, never>;
    /** parsedExerciseItemOutput */
    parsedExerciseItemOutput: {
      data: components["schemas"]["parsedExerciseOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** parsedExerciseOutputItem */
    parsedExerciseOutputItem: {
      attributes: components["schemas"]["parsedExerciseOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      /** Type */
      type: string;
    };
    /** parsedExerciseOutputItemAttributes */
    parsedExerciseOutputItemAttributes: {
      adapted: components["schemas"]["gabby__renderable__Exercise"];
      delta: components["schemas"]["gabby__exercise_delta__Exercise"];
    };
    /** pdfFileCreateInput */
    pdfFileCreateInput: {
      data: components["schemas"]["pdfFileCreateInputData"];
    };
    /** pdfFileCreateInputData */
    pdfFileCreateInputData: {
      attributes: components["schemas"]["pdfFileCreateInputDataAttributes"];
      /** @default {} */
      relationships?: components["schemas"]["pdfFileCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** pdfFileCreateInputDataAttributes */
    pdfFileCreateInputDataAttributes: {
      /** Bytescount */
      bytesCount: number;
      /** Pagescount */
      pagesCount: number;
      /** Sha256 */
      sha256: string;
    };
    /** pdfFileCreateInputDataRelationships */
    pdfFileCreateInputDataRelationships: Record<string, never>;
    /** pdfFileItemOutput */
    pdfFileItemOutput: {
      data: components["schemas"]["pdfFileOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** pdfFileNamingCreateInput */
    pdfFileNamingCreateInput: {
      data: components["schemas"]["pdfFileNamingCreateInputData"];
    };
    /** pdfFileNamingCreateInputData */
    pdfFileNamingCreateInputData: {
      attributes: components["schemas"]["pdfFileNamingCreateInputDataAttributes"];
      relationships: components["schemas"]["pdfFileNamingCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** pdfFileNamingCreateInputDataAttributes */
    pdfFileNamingCreateInputDataAttributes: {
      /** Name */
      name: string;
    };
    /** pdfFileNamingCreateInputDataRelationships */
    pdfFileNamingCreateInputDataRelationships: {
      pdfFile: components["schemas"]["pdfFileNaming_pdfFile_Relationship"];
    };
    /** pdfFileNamingItemOutput */
    pdfFileNamingItemOutput: {
      data: components["schemas"]["pdfFileNamingOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** pdfFileNamingOutputItem */
    pdfFileNamingOutputItem: {
      attributes: components["schemas"]["pdfFileNamingOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["pdfFileNamingOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** pdfFileNamingOutputItemAttributes */
    pdfFileNamingOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Name */
      name: string;
    };
    /** pdfFileNamingOutputItemRelationships */
    pdfFileNamingOutputItemRelationships: {
      createdBy: components["schemas"]["pdfFileNaming_createdBy_Relationship"];
      pdfFile: components["schemas"]["pdfFileNaming_pdfFile_Relationship"];
    };
    /** pdfFileNamingPageOutput */
    pdfFileNamingPageOutput: {
      /** Data */
      data: components["schemas"]["pdfFileNamingOutputItem"][];
      /** Included */
      included?: unknown[];
      links: components["schemas"]["PageLinks"];
      meta: components["schemas"]["PageMeta"];
    };
    /** pdfFileNamingUpdateInput */
    pdfFileNamingUpdateInput: {
      data: components["schemas"]["pdfFileNamingUpdateInputData"];
    };
    /** pdfFileNamingUpdateInputData */
    pdfFileNamingUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["pdfFileNamingUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["pdfFileNamingUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** pdfFileNamingUpdateInputDataAttributes */
    pdfFileNamingUpdateInputDataAttributes: Record<string, never>;
    /** pdfFileNamingUpdateInputDataRelationships */
    pdfFileNamingUpdateInputDataRelationships: Record<string, never>;
    /** pdfFileNaming_createdBy_Relationship */
    pdfFileNaming_createdBy_Relationship: {
      data: components["schemas"]["pdfFileNaming_createdBy_Relationship_ObjectId"];
    };
    /** pdfFileNaming_createdBy_Relationship_ObjectId */
    pdfFileNaming_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** pdfFileNaming_pdfFile_Relationship */
    pdfFileNaming_pdfFile_Relationship: {
      data: components["schemas"]["pdfFileNaming_pdfFile_Relationship_ObjectId"];
    };
    /** pdfFileNaming_pdfFile_Relationship_ObjectId */
    pdfFileNaming_pdfFile_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "pdfFile";
    };
    /** pdfFileOutputItem */
    pdfFileOutputItem: {
      attributes: components["schemas"]["pdfFileOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["pdfFileOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** pdfFileOutputItemAttributes */
    pdfFileOutputItemAttributes: {
      /** Bytescount */
      bytesCount: number;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Pagescount */
      pagesCount: number;
      /** Sha256 */
      sha256: string;
    };
    /** pdfFileOutputItemRelationships */
    pdfFileOutputItemRelationships: {
      createdBy: components["schemas"]["pdfFile_createdBy_Relationship"];
      namings: components["schemas"]["pdfFile_namings_RelationshipOutput"];
      sections: components["schemas"]["pdfFile_sections_RelationshipOutput"];
    };
    /** pdfFilePageOutput */
    pdfFilePageOutput: {
      /** Data */
      data: components["schemas"]["pdfFileOutputItem"][];
      /** Included */
      included?: unknown[];
      links: components["schemas"]["PageLinks"];
      meta: components["schemas"]["PageMeta"];
    };
    /** pdfFileUpdateInput */
    pdfFileUpdateInput: {
      data: components["schemas"]["pdfFileUpdateInputData"];
    };
    /** pdfFileUpdateInputData */
    pdfFileUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["pdfFileUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["pdfFileUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** pdfFileUpdateInputDataAttributes */
    pdfFileUpdateInputDataAttributes: Record<string, never>;
    /** pdfFileUpdateInputDataRelationships */
    pdfFileUpdateInputDataRelationships: Record<string, never>;
    /** pdfFile_createdBy_Relationship */
    pdfFile_createdBy_Relationship: {
      data: components["schemas"]["pdfFile_createdBy_Relationship_ObjectId"];
    };
    /** pdfFile_createdBy_Relationship_ObjectId */
    pdfFile_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** pdfFile_namings_RelationshipOutput */
    pdfFile_namings_RelationshipOutput: {
      /** Data */
      data: components["schemas"]["pdfFile_namings_RelationshipOutput_ObjectId"][];
      meta: components["schemas"]["OutputListRelationShipMeta"];
    };
    /** pdfFile_namings_RelationshipOutput_ObjectId */
    pdfFile_namings_RelationshipOutput_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "pdfFileNaming";
    };
    /** pdfFile_sections_RelationshipOutput */
    pdfFile_sections_RelationshipOutput: {
      /** Data */
      data: components["schemas"]["pdfFile_sections_RelationshipOutput_ObjectId"][];
      meta: components["schemas"]["OutputListRelationShipMeta"];
    };
    /** pdfFile_sections_RelationshipOutput_ObjectId */
    pdfFile_sections_RelationshipOutput_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "section";
    };
    /** pingCreateInput */
    pingCreateInput: {
      data: components["schemas"]["pingCreateInputData"];
    };
    /** pingCreateInputData */
    pingCreateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["pingCreateInputDataAttributes"];
      /**
       * @default {
       *   "next": {
       *     "data": []
       *   },
       *   "prev": {}
       * }
       */
      relationships?: components["schemas"]["pingCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** pingCreateInputDataAttributes */
    pingCreateInputDataAttributes: {
      /** Message */
      message?: string | null;
    };
    /** pingCreateInputDataRelationships */
    pingCreateInputDataRelationships: {
      /**
       * @default {
       *   "data": []
       * }
       */
      next?: components["schemas"]["ping_next_RelationshipInput"];
      /** @default {} */
      prev?: components["schemas"]["ping_prev_Relationship"];
    };
    /** pingItemOutput */
    pingItemOutput: {
      data: components["schemas"]["pingOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** pingOutputItem */
    pingOutputItem: {
      attributes: components["schemas"]["pingOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["pingOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** pingOutputItemAttributes */
    pingOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Message */
      message: string | null;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
    };
    /** pingOutputItemRelationships */
    pingOutputItemRelationships: {
      createdBy: components["schemas"]["ping_createdBy_Relationship"];
      next: components["schemas"]["ping_next_RelationshipOutput"];
      prev: components["schemas"]["ping_prev_Relationship"];
      updatedBy: components["schemas"]["ping_updatedBy_Relationship"];
    };
    /** pingPageOutput */
    pingPageOutput: {
      /** Data */
      data: components["schemas"]["pingOutputItem"][];
      /** Included */
      included?: unknown[];
      links: components["schemas"]["PageLinks"];
      meta: components["schemas"]["PageMeta"];
    };
    /** pingUpdateInput */
    pingUpdateInput: {
      data: components["schemas"]["pingUpdateInputData"];
    };
    /** pingUpdateInputData */
    pingUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["pingUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["pingUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** pingUpdateInputDataAttributes */
    pingUpdateInputDataAttributes: {
      /** Message */
      message?: string | null;
    };
    /** pingUpdateInputDataRelationships */
    pingUpdateInputDataRelationships: {
      next?: components["schemas"]["ping_next_RelationshipInput"];
      prev?: components["schemas"]["ping_prev_Relationship"];
    };
    /** ping_createdBy_Relationship */
    ping_createdBy_Relationship: {
      data: components["schemas"]["ping_createdBy_Relationship_ObjectId"] | null;
    };
    /** ping_createdBy_Relationship_ObjectId */
    ping_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** ping_next_RelationshipInput */
    ping_next_RelationshipInput: {
      /** Data */
      data: components["schemas"]["ping_next_RelationshipInput_ObjectId"][];
    };
    /** ping_next_RelationshipInput_ObjectId */
    ping_next_RelationshipInput_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "ping";
    };
    /** ping_next_RelationshipOutput */
    ping_next_RelationshipOutput: {
      /** Data */
      data: components["schemas"]["ping_next_RelationshipOutput_ObjectId"][];
      meta: components["schemas"]["OutputListRelationShipMeta"];
    };
    /** ping_next_RelationshipOutput_ObjectId */
    ping_next_RelationshipOutput_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "ping";
    };
    /** ping_prev_Relationship */
    ping_prev_Relationship: {
      data: components["schemas"]["ping_prev_Relationship_ObjectId"] | null;
    };
    /** ping_prev_Relationship_ObjectId */
    ping_prev_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "ping";
    };
    /** ping_updatedBy_Relationship */
    ping_updatedBy_Relationship: {
      data: components["schemas"]["ping_updatedBy_Relationship_ObjectId"] | null;
    };
    /** ping_updatedBy_Relationship_ObjectId */
    ping_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** projectCreateInput */
    projectCreateInput: {
      data: components["schemas"]["projectCreateInputData"];
    };
    /** projectCreateInputData */
    projectCreateInputData: {
      attributes: components["schemas"]["projectCreateInputDataAttributes"];
      /** @default {} */
      relationships?: components["schemas"]["projectCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** projectCreateInputDataAttributes */
    projectCreateInputDataAttributes: {
      /**
       * Description
       * @default
       */
      description?: string;
      /** Title */
      title: string;
    };
    /** projectCreateInputDataRelationships */
    projectCreateInputDataRelationships: Record<string, never>;
    /** projectItemOutput */
    projectItemOutput: {
      data: components["schemas"]["projectOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** projectOutputItem */
    projectOutputItem: {
      attributes: components["schemas"]["projectOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["projectOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** projectOutputItemAttributes */
    projectOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Description */
      description: string;
      /** Title */
      title: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
    };
    /** projectOutputItemRelationships */
    projectOutputItemRelationships: {
      createdBy: components["schemas"]["project_createdBy_Relationship"];
      exercises: components["schemas"]["project_exercises_RelationshipOutput"];
      textbooks: components["schemas"]["project_textbooks_RelationshipOutput"];
      updatedBy: components["schemas"]["project_updatedBy_Relationship"];
    };
    /** projectPageOutput */
    projectPageOutput: {
      /** Data */
      data: components["schemas"]["projectOutputItem"][];
      /** Included */
      included?: unknown[];
      links: components["schemas"]["PageLinks"];
      meta: components["schemas"]["PageMeta"];
    };
    /** projectUpdateInput */
    projectUpdateInput: {
      data: components["schemas"]["projectUpdateInputData"];
    };
    /** projectUpdateInputData */
    projectUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["projectUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["projectUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** projectUpdateInputDataAttributes */
    projectUpdateInputDataAttributes: {
      /** Description */
      description?: string;
      /** Title */
      title?: string;
    };
    /** projectUpdateInputDataRelationships */
    projectUpdateInputDataRelationships: Record<string, never>;
    /** project_createdBy_Relationship */
    project_createdBy_Relationship: {
      data: components["schemas"]["project_createdBy_Relationship_ObjectId"];
    };
    /** project_createdBy_Relationship_ObjectId */
    project_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** project_exercises_RelationshipOutput */
    project_exercises_RelationshipOutput: {
      /** Data */
      data: components["schemas"]["project_exercises_RelationshipOutput_ObjectId"][];
      meta: components["schemas"]["OutputListRelationShipMeta"];
    };
    /** project_exercises_RelationshipOutput_ObjectId */
    project_exercises_RelationshipOutput_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "exercise";
    };
    /** project_textbooks_RelationshipOutput */
    project_textbooks_RelationshipOutput: {
      /** Data */
      data: components["schemas"]["project_textbooks_RelationshipOutput_ObjectId"][];
      meta: components["schemas"]["OutputListRelationShipMeta"];
    };
    /** project_textbooks_RelationshipOutput_ObjectId */
    project_textbooks_RelationshipOutput_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "textbook";
    };
    /** project_updatedBy_Relationship */
    project_updatedBy_Relationship: {
      data: components["schemas"]["project_updatedBy_Relationship_ObjectId"];
    };
    /** project_updatedBy_Relationship_ObjectId */
    project_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** recoveryEmailRequestCreateInput */
    recoveryEmailRequestCreateInput: {
      data: components["schemas"]["recoveryEmailRequestCreateInputData"];
    };
    /** recoveryEmailRequestCreateInputData */
    recoveryEmailRequestCreateInputData: {
      attributes: components["schemas"]["recoveryEmailRequestCreateInputDataAttributes"];
      /** @default {} */
      relationships?: components["schemas"]["recoveryEmailRequestCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** recoveryEmailRequestCreateInputDataAttributes */
    recoveryEmailRequestCreateInputDataAttributes: {
      /** Address */
      address: string;
      /** Language */
      language: string;
    };
    /** recoveryEmailRequestCreateInputDataRelationships */
    recoveryEmailRequestCreateInputDataRelationships: Record<string, never>;
    /** recoveryEmailRequestItemOutput */
    recoveryEmailRequestItemOutput: {
      data: components["schemas"]["recoveryEmailRequestOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** recoveryEmailRequestOutputItem */
    recoveryEmailRequestOutputItem: {
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      /** Type */
      type: string;
    };
    /** sectionCreateInput */
    sectionCreateInput: {
      data: components["schemas"]["sectionCreateInputData"];
    };
    /** sectionCreateInputData */
    sectionCreateInputData: {
      attributes: components["schemas"]["sectionCreateInputDataAttributes"];
      relationships: components["schemas"]["sectionCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** sectionCreateInputDataAttributes */
    sectionCreateInputDataAttributes: {
      /** Pagescount */
      pagesCount: number;
      /** Pdffilestartpage */
      pdfFileStartPage: number;
      /** Textbookstartpage */
      textbookStartPage: number;
    };
    /** sectionCreateInputDataRelationships */
    sectionCreateInputDataRelationships: {
      pdfFile: components["schemas"]["section_pdfFile_Relationship"];
      textbook: components["schemas"]["section_textbook_Relationship"];
    };
    /** sectionItemOutput */
    sectionItemOutput: {
      data: components["schemas"]["sectionOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** sectionOutputItem */
    sectionOutputItem: {
      attributes: components["schemas"]["sectionOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["sectionOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** sectionOutputItemAttributes */
    sectionOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Pagescount */
      pagesCount: number;
      /** Pdffilestartpage */
      pdfFileStartPage: number;
      /** Textbookstartpage */
      textbookStartPage: number;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
    };
    /** sectionOutputItemRelationships */
    sectionOutputItemRelationships: {
      createdBy: components["schemas"]["section_createdBy_Relationship"];
      pdfFile: components["schemas"]["section_pdfFile_Relationship"];
      textbook: components["schemas"]["section_textbook_Relationship"];
      updatedBy: components["schemas"]["section_updatedBy_Relationship"];
    };
    /** sectionPageOutput */
    sectionPageOutput: {
      /** Data */
      data: components["schemas"]["sectionOutputItem"][];
      /** Included */
      included?: unknown[];
      links: components["schemas"]["PageLinks"];
      meta: components["schemas"]["PageMeta"];
    };
    /** sectionUpdateInput */
    sectionUpdateInput: {
      data: components["schemas"]["sectionUpdateInputData"];
    };
    /** sectionUpdateInputData */
    sectionUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["sectionUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["sectionUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** sectionUpdateInputDataAttributes */
    sectionUpdateInputDataAttributes: {
      /** Pagescount */
      pagesCount?: number;
      /** Pdffilestartpage */
      pdfFileStartPage?: number;
      /** Textbookstartpage */
      textbookStartPage?: number;
    };
    /** sectionUpdateInputDataRelationships */
    sectionUpdateInputDataRelationships: Record<string, never>;
    /** section_createdBy_Relationship */
    section_createdBy_Relationship: {
      data: components["schemas"]["section_createdBy_Relationship_ObjectId"];
    };
    /** section_createdBy_Relationship_ObjectId */
    section_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** section_pdfFile_Relationship */
    section_pdfFile_Relationship: {
      data: components["schemas"]["section_pdfFile_Relationship_ObjectId"];
    };
    /** section_pdfFile_Relationship_ObjectId */
    section_pdfFile_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "pdfFile";
    };
    /** section_textbook_Relationship */
    section_textbook_Relationship: {
      data: components["schemas"]["section_textbook_Relationship_ObjectId"];
    };
    /** section_textbook_Relationship_ObjectId */
    section_textbook_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "textbook";
    };
    /** section_updatedBy_Relationship */
    section_updatedBy_Relationship: {
      data: components["schemas"]["section_updatedBy_Relationship_ObjectId"];
    };
    /** section_updatedBy_Relationship_ObjectId */
    section_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** selectThingsAdaptationCreateInput */
    selectThingsAdaptationCreateInput: {
      data: components["schemas"]["selectThingsAdaptationCreateInputData"];
    };
    /** selectThingsAdaptationCreateInputData */
    selectThingsAdaptationCreateInputData: {
      attributes: components["schemas"]["selectThingsAdaptationCreateInputDataAttributes"];
      relationships: components["schemas"]["selectThingsAdaptationCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** selectThingsAdaptationCreateInputDataAttributes */
    selectThingsAdaptationCreateInputDataAttributes: {
      /** Colors */
      colors: number;
      /** Punctuation */
      punctuation: boolean;
      /** Words */
      words: boolean;
    };
    /** selectThingsAdaptationCreateInputDataRelationships */
    selectThingsAdaptationCreateInputDataRelationships: {
      exercise: components["schemas"]["selectThingsAdaptation_exercise_Relationship"];
    };
    /** selectThingsAdaptationItemOutput */
    selectThingsAdaptationItemOutput: {
      data: components["schemas"]["selectThingsAdaptationOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** selectThingsAdaptationOutputItem */
    selectThingsAdaptationOutputItem: {
      attributes: components["schemas"]["selectThingsAdaptationOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["selectThingsAdaptationOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** selectThingsAdaptationOutputItemAttributes */
    selectThingsAdaptationOutputItemAttributes: {
      /** Colors */
      colors: number;
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Punctuation */
      punctuation: boolean;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
      /** Words */
      words: boolean;
    };
    /** selectThingsAdaptationOutputItemRelationships */
    selectThingsAdaptationOutputItemRelationships: {
      createdBy: components["schemas"]["selectThingsAdaptation_createdBy_Relationship"];
      exercise: components["schemas"]["selectThingsAdaptation_exercise_Relationship"];
      updatedBy: components["schemas"]["selectThingsAdaptation_updatedBy_Relationship"];
    };
    /** selectThingsAdaptationUpdateInput */
    selectThingsAdaptationUpdateInput: {
      data: components["schemas"]["selectThingsAdaptationUpdateInputData"];
    };
    /** selectThingsAdaptationUpdateInputData */
    selectThingsAdaptationUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["selectThingsAdaptationUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["selectThingsAdaptationUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** selectThingsAdaptationUpdateInputDataAttributes */
    selectThingsAdaptationUpdateInputDataAttributes: {
      /** Colors */
      colors?: number;
      /** Punctuation */
      punctuation?: boolean;
      /** Words */
      words?: boolean;
    };
    /** selectThingsAdaptationUpdateInputDataRelationships */
    selectThingsAdaptationUpdateInputDataRelationships: Record<string, never>;
    /** selectThingsAdaptation_createdBy_Relationship */
    selectThingsAdaptation_createdBy_Relationship: {
      data: components["schemas"]["selectThingsAdaptation_createdBy_Relationship_ObjectId"];
    };
    /** selectThingsAdaptation_createdBy_Relationship_ObjectId */
    selectThingsAdaptation_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** selectThingsAdaptation_exercise_Relationship */
    selectThingsAdaptation_exercise_Relationship: {
      data: components["schemas"]["selectThingsAdaptation_exercise_Relationship_ObjectId"];
    };
    /** selectThingsAdaptation_exercise_Relationship_ObjectId */
    selectThingsAdaptation_exercise_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "exercise";
    };
    /** selectThingsAdaptation_updatedBy_Relationship */
    selectThingsAdaptation_updatedBy_Relationship: {
      data: components["schemas"]["selectThingsAdaptation_updatedBy_Relationship_ObjectId"];
    };
    /** selectThingsAdaptation_updatedBy_Relationship_ObjectId */
    selectThingsAdaptation_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** syntheticErrorItemOutput */
    syntheticErrorItemOutput: {
      data: components["schemas"]["syntheticErrorOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** syntheticErrorOutputItem */
    syntheticErrorOutputItem: {
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      /** Type */
      type: string;
    };
    /** textbookCreateInput */
    textbookCreateInput: {
      data: components["schemas"]["textbookCreateInputData"];
    };
    /** textbookCreateInputData */
    textbookCreateInputData: {
      attributes: components["schemas"]["textbookCreateInputDataAttributes"];
      relationships: components["schemas"]["textbookCreateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** textbookCreateInputDataAttributes */
    textbookCreateInputDataAttributes: {
      /** Isbn */
      isbn?: string | null;
      /** Publisher */
      publisher?: string | null;
      /** Title */
      title: string;
      /** Year */
      year?: number | null;
    };
    /** textbookCreateInputDataRelationships */
    textbookCreateInputDataRelationships: {
      project: components["schemas"]["textbook_project_Relationship"];
    };
    /** textbookItemOutput */
    textbookItemOutput: {
      data: components["schemas"]["textbookOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** textbookOutputItem */
    textbookOutputItem: {
      attributes: components["schemas"]["textbookOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["textbookOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** textbookOutputItemAttributes */
    textbookOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /** Isbn */
      isbn: string | null;
      /** Publisher */
      publisher: string | null;
      /** Title */
      title: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
      /** Year */
      year: number | null;
    };
    /** textbookOutputItemRelationships */
    textbookOutputItemRelationships: {
      createdBy: components["schemas"]["textbook_createdBy_Relationship"];
      exercises: components["schemas"]["textbook_exercises_RelationshipOutput"];
      project: components["schemas"]["textbook_project_Relationship"];
      sections: components["schemas"]["textbook_sections_RelationshipOutput"];
      updatedBy: components["schemas"]["textbook_updatedBy_Relationship"];
    };
    /** textbookPageOutput */
    textbookPageOutput: {
      /** Data */
      data: components["schemas"]["textbookOutputItem"][];
      /** Included */
      included?: unknown[];
      links: components["schemas"]["PageLinks"];
      meta: components["schemas"]["PageMeta"];
    };
    /** textbookUpdateInput */
    textbookUpdateInput: {
      data: components["schemas"]["textbookUpdateInputData"];
    };
    /** textbookUpdateInputData */
    textbookUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["textbookUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["textbookUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** textbookUpdateInputDataAttributes */
    textbookUpdateInputDataAttributes: {
      /** Isbn */
      isbn?: string | null;
      /** Publisher */
      publisher?: string | null;
      /** Title */
      title?: string;
      /** Year */
      year?: number | null;
    };
    /** textbookUpdateInputDataRelationships */
    textbookUpdateInputDataRelationships: Record<string, never>;
    /** textbook_createdBy_Relationship */
    textbook_createdBy_Relationship: {
      data: components["schemas"]["textbook_createdBy_Relationship_ObjectId"];
    };
    /** textbook_createdBy_Relationship_ObjectId */
    textbook_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** textbook_exercises_RelationshipOutput */
    textbook_exercises_RelationshipOutput: {
      /** Data */
      data: components["schemas"]["textbook_exercises_RelationshipOutput_ObjectId"][];
      meta: components["schemas"]["OutputListRelationShipMeta"];
    };
    /** textbook_exercises_RelationshipOutput_ObjectId */
    textbook_exercises_RelationshipOutput_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "exercise";
    };
    /** textbook_project_Relationship */
    textbook_project_Relationship: {
      data: components["schemas"]["textbook_project_Relationship_ObjectId"];
    };
    /** textbook_project_Relationship_ObjectId */
    textbook_project_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "project";
    };
    /** textbook_sections_RelationshipOutput */
    textbook_sections_RelationshipOutput: {
      /** Data */
      data: components["schemas"]["textbook_sections_RelationshipOutput_ObjectId"][];
      meta: components["schemas"]["OutputListRelationShipMeta"];
    };
    /** textbook_sections_RelationshipOutput_ObjectId */
    textbook_sections_RelationshipOutput_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "section";
    };
    /** textbook_updatedBy_Relationship */
    textbook_updatedBy_Relationship: {
      data: components["schemas"]["textbook_updatedBy_Relationship_ObjectId"];
    };
    /** textbook_updatedBy_Relationship_ObjectId */
    textbook_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** userItemOutput */
    userItemOutput: {
      data: components["schemas"]["userOutputItem"];
      /** Included */
      included?: unknown[];
    };
    /** userOutputItem */
    userOutputItem: {
      attributes: components["schemas"]["userOutputItemAttributes"];
      /** Id */
      id: string;
      links: components["schemas"]["ItemLinks"];
      relationships: components["schemas"]["userOutputItemRelationships"];
      /** Type */
      type: string;
    };
    /** userOutputItemAttributes */
    userOutputItemAttributes: {
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string;
      /**
       * Updatedat
       * Format: date-time
       */
      updatedAt: string;
      /** Username */
      username: string | null;
    };
    /** userOutputItemRelationships */
    userOutputItemRelationships: {
      createdBy: components["schemas"]["user_createdBy_Relationship"];
      updatedBy: components["schemas"]["user_updatedBy_Relationship"];
    };
    /** userUpdateInput */
    userUpdateInput: {
      data: components["schemas"]["userUpdateInputData"];
    };
    /** userUpdateInputData */
    userUpdateInputData: {
      /** @default {} */
      attributes?: components["schemas"]["userUpdateInputDataAttributes"];
      /** Id */
      id: string;
      /** @default {} */
      relationships?: components["schemas"]["userUpdateInputDataRelationships"];
      /** Type */
      type: string;
    };
    /** userUpdateInputDataAttributes */
    userUpdateInputDataAttributes: {
      /** Cleartextpassword */
      clearTextPassword?: string;
      /** Username */
      username?: string | null;
    };
    /** userUpdateInputDataRelationships */
    userUpdateInputDataRelationships: Record<string, never>;
    /** user_createdBy_Relationship */
    user_createdBy_Relationship: {
      data: components["schemas"]["user_createdBy_Relationship_ObjectId"];
    };
    /** user_createdBy_Relationship_ObjectId */
    user_createdBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
    /** user_updatedBy_Relationship */
    user_updatedBy_Relationship: {
      data: components["schemas"]["user_updatedBy_Relationship_ObjectId"];
    };
    /** user_updatedBy_Relationship_ObjectId */
    user_updatedBy_Relationship_ObjectId: {
      /** Id */
      id: string;
      /**
       * Type
       * @constant
       * @enum {string}
       */
      type: "user";
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Batch */
  batch_api_batch_post: {
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Exercises */
  get_exercises_api_exercises_get: {
    parameters: {
      query?: {
        "filter[number]"?: string;
        "filter[textbookPage]"?: number;
        "filter[textbook]"?: string;
        include?: string;
        "page[number]"?: number;
        "page[size]"?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["exercisePageOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Exercise */
  create_exercise_api_exercises_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["exerciseCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["exerciseItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Exercise */
  get_exercise_api_exercises__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["exerciseItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Exercise */
  delete_exercise_api_exercises__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Exercise */
  update_exercise_api_exercises__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["exerciseUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["exerciseItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Extraction Events */
  get_extraction_events_api_extractionEvents_get: {
    parameters: {
      query?: {
        include?: string;
        "page[number]"?: number;
        "page[size]"?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["extractionEventPageOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Extraction Event */
  create_extraction_event_api_extractionEvents_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["extractionEventCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["extractionEventItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Extraction Event */
  get_extraction_event_api_extractionEvents__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["extractionEventItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Extraction Event */
  delete_extraction_event_api_extractionEvents__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Extraction Event */
  update_extraction_event_api_extractionEvents__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["extractionEventUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["extractionEventItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Fill With Free Text Adaptation */
  create_fill_with_free_text_adaptation_api_fillWithFreeTextAdaptations_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["fillWithFreeTextAdaptationCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["fillWithFreeTextAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Fill With Free Text Adaptation */
  get_fill_with_free_text_adaptation_api_fillWithFreeTextAdaptations__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["fillWithFreeTextAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Fill With Free Text Adaptation */
  delete_fill_with_free_text_adaptation_api_fillWithFreeTextAdaptations__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Fill With Free Text Adaptation */
  update_fill_with_free_text_adaptation_api_fillWithFreeTextAdaptations__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["fillWithFreeTextAdaptationUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["fillWithFreeTextAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Multiple Choices In Instructions Adaptation */
  create_multiple_choices_in_instructions_adaptation_api_multipleChoicesInInstructionsAdaptations_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["multipleChoicesInInstructionsAdaptationCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["multipleChoicesInInstructionsAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Multiple Choices In Instructions Adaptation */
  get_multiple_choices_in_instructions_adaptation_api_multipleChoicesInInstructionsAdaptations__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["multipleChoicesInInstructionsAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Multiple Choices In Instructions Adaptation */
  delete_multiple_choices_in_instructions_adaptation_api_multipleChoicesInInstructionsAdaptations__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Multiple Choices In Instructions Adaptation */
  update_multiple_choices_in_instructions_adaptation_api_multipleChoicesInInstructionsAdaptations__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["multipleChoicesInInstructionsAdaptationUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["multipleChoicesInInstructionsAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Multiple Choices In Wording Adaptation */
  create_multiple_choices_in_wording_adaptation_api_multipleChoicesInWordingAdaptations_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["multipleChoicesInWordingAdaptationCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["multipleChoicesInWordingAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Multiple Choices In Wording Adaptation */
  get_multiple_choices_in_wording_adaptation_api_multipleChoicesInWordingAdaptations__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["multipleChoicesInWordingAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Multiple Choices In Wording Adaptation */
  delete_multiple_choices_in_wording_adaptation_api_multipleChoicesInWordingAdaptations__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Multiple Choices In Wording Adaptation */
  update_multiple_choices_in_wording_adaptation_api_multipleChoicesInWordingAdaptations__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["multipleChoicesInWordingAdaptationUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["multipleChoicesInWordingAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Parsed Exercise */
  create_parsed_exercise_api_parsedExercises_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["parsedExerciseCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["parsedExerciseItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Parsed Exercise */
  get_parsed_exercise_api_parsedExercises__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["parsedExerciseItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Pdf File Namings */
  get_pdf_file_namings_api_pdfFileNamings_get: {
    parameters: {
      query?: {
        include?: string;
        "page[number]"?: number;
        "page[size]"?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pdfFileNamingPageOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Pdf File Naming */
  create_pdf_file_naming_api_pdfFileNamings_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["pdfFileNamingCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["pdfFileNamingItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Pdf File Naming */
  get_pdf_file_naming_api_pdfFileNamings__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pdfFileNamingItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Pdf File Naming */
  delete_pdf_file_naming_api_pdfFileNamings__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Pdf File Naming */
  update_pdf_file_naming_api_pdfFileNamings__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["pdfFileNamingUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pdfFileNamingItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Pdf Files */
  get_pdf_files_api_pdfFiles_get: {
    parameters: {
      query?: {
        include?: string;
        "page[number]"?: number;
        "page[size]"?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pdfFilePageOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Pdf File */
  create_pdf_file_api_pdfFiles_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["pdfFileCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["pdfFileItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Pdf File */
  get_pdf_file_api_pdfFiles__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pdfFileItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Pdf File */
  delete_pdf_file_api_pdfFiles__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Pdf File */
  update_pdf_file_api_pdfFiles__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["pdfFileUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pdfFileItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Pings */
  get_pings_api_pings_get: {
    parameters: {
      query?: {
        "filter[message]"?: string;
        "filter[prev]"?: string;
        include?: string;
        "page[number]"?: number;
        "page[size]"?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pingPageOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Ping */
  create_ping_api_pings_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["pingCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["pingItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Ping */
  get_ping_api_pings__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pingItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Ping */
  delete_ping_api_pings__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Ping */
  update_ping_api_pings__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["pingUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["pingItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Extraction Report */
  extraction_report_api_project__project_id__extraction_report_json_get: {
    parameters: {
      query: {
        token: string;
      };
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Export Project */
  export_project_api_project__project_id__html_get: {
    parameters: {
      query: {
        token: string;
      };
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Projects */
  get_projects_api_projects_get: {
    parameters: {
      query?: {
        include?: string;
        "page[number]"?: number;
        "page[size]"?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["projectPageOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Project */
  create_project_api_projects_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["projectCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["projectItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Project */
  get_project_api_projects__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["projectItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Project */
  delete_project_api_projects__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Project */
  update_project_api_projects__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["projectUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["projectItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Recovery Email Request */
  create_recovery_email_request_api_recoveryEmailRequests_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["recoveryEmailRequestCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["recoveryEmailRequestItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Recovery Email Request */
  get_recovery_email_request_api_recoveryEmailRequests__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["recoveryEmailRequestItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Sections */
  get_sections_api_sections_get: {
    parameters: {
      query?: {
        include?: string;
        "page[number]"?: number;
        "page[size]"?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["sectionPageOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Section */
  create_section_api_sections_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["sectionCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["sectionItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Section */
  get_section_api_sections__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["sectionItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Section */
  delete_section_api_sections__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Section */
  update_section_api_sections__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["sectionUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["sectionItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Select Things Adaptation */
  create_select_things_adaptation_api_selectThingsAdaptations_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["selectThingsAdaptationCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["selectThingsAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Select Things Adaptation */
  get_select_things_adaptation_api_selectThingsAdaptations__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["selectThingsAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Select Things Adaptation */
  delete_select_things_adaptation_api_selectThingsAdaptations__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Select Things Adaptation */
  update_select_things_adaptation_api_selectThingsAdaptations__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["selectThingsAdaptationUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["selectThingsAdaptationItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Synthetic Error */
  get_synthetic_error_api_syntheticErrors__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["syntheticErrorItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Textbooks */
  get_textbooks_api_textbooks_get: {
    parameters: {
      query?: {
        include?: string;
        "page[number]"?: number;
        "page[size]"?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["textbookPageOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Textbook */
  create_textbook_api_textbooks_post: {
    parameters: {
      query?: {
        include?: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["textbookCreateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/vnd.api+json": components["schemas"]["textbookItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Textbook */
  get_textbook_api_textbooks__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["textbookItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Textbook */
  delete_textbook_api_textbooks__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Textbook */
  update_textbook_api_textbooks__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["textbookUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["textbookItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Login */
  login_api_token_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_login_api_token_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get User */
  get_user_api_users__id__get: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["userItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update User */
  update_user_api_users__id__patch: {
    parameters: {
      query?: {
        include?: string;
      };
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["userUpdateInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/vnd.api+json": components["schemas"]["userItemOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Reset For Tests */
  reset_for_tests_reset_for_tests_yes_im_sure_post: {
    parameters: {
      query?: {
        fixtures?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
